[{"G:\\React\\Reactjs\\react-food-order-app\\src\\index.js":"1","G:\\React\\Reactjs\\react-food-order-app\\src\\App.js":"2","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Layout\\Header.js":"3","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Layout\\HeaderCartButton.js":"4","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\CartIcon.js":"5","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\Meals.js":"6","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\MealsSummary.js":"7","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\AvailableMeals.js":"8","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\UI\\Card.js":"9","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\MealItem\\MealItem.js":"10","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\MealItem\\MealItemForm.js":"11","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\UI\\Input.js":"12","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\UI\\Modal.js":"13","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\Cart.js":"14","G:\\React\\Reactjs\\react-food-order-app\\src\\store\\cart-context.js":"15","G:\\React\\Reactjs\\react-food-order-app\\src\\store\\CartProvider.js":"16","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\CartItem.js":"17","G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\Checkout.js":"18","G:\\React\\Reactjs\\react-food-order-app\\src\\hooks\\use-input.js":"19"},{"size":142,"mtime":1616594953000,"results":"20","hashOfConfig":"21"},{"size":718,"mtime":1640920711658,"results":"22","hashOfConfig":"21"},{"size":608,"mtime":1640791212687,"results":"23","hashOfConfig":"21"},{"size":1190,"mtime":1641183609714,"results":"24","hashOfConfig":"21"},{"size":508,"mtime":1640760646259,"results":"25","hashOfConfig":"21"},{"size":294,"mtime":1640787729824,"results":"26","hashOfConfig":"21"},{"size":529,"mtime":1640761817500,"results":"27","hashOfConfig":"21"},{"size":2076,"mtime":1641885463012,"results":"28","hashOfConfig":"21"},{"size":209,"mtime":1640762677893,"results":"29","hashOfConfig":"21"},{"size":928,"mtime":1640876764314,"results":"30","hashOfConfig":"21"},{"size":1222,"mtime":1640877418545,"results":"31","hashOfConfig":"21"},{"size":335,"mtime":1640850972223,"results":"32","hashOfConfig":"21"},{"size":745,"mtime":1640790109518,"results":"33","hashOfConfig":"21"},{"size":2982,"mtime":1641917053969,"results":"34","hashOfConfig":"21"},{"size":199,"mtime":1640920720777,"results":"35","hashOfConfig":"21"},{"size":3018,"mtime":1641453398730,"results":"36","hashOfConfig":"21"},{"size":612,"mtime":1616590017000,"results":"37","hashOfConfig":"21"},{"size":3930,"mtime":1641914938712,"results":"38","hashOfConfig":"21"},{"size":1229,"mtime":1641917351760,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6hypw6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\React\\Reactjs\\react-food-order-app\\src\\index.js",[],["80","81"],"G:\\React\\Reactjs\\react-food-order-app\\src\\App.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Layout\\Header.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Layout\\HeaderCartButton.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\CartIcon.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\Meals.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\MealsSummary.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\AvailableMeals.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\UI\\Card.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\MealItem\\MealItem.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Meals\\MealItem\\MealItemForm.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\UI\\Input.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\UI\\Modal.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\Cart.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\store\\cart-context.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\store\\CartProvider.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\CartItem.js",[],"G:\\React\\Reactjs\\react-food-order-app\\src\\components\\Cart\\Checkout.js",["82"],"import React, { useState } from 'react';\nimport useInput from '../../hooks/use-input';\nimport classes from './Checkout.module.css';\n\nconst Checkout = (props) => {\n   const isEmpty = (value) => {\n      return value.trim() !== '';\n   };\n   const pinIsValid = (value) => {\n      return value.trim().length === 6;\n   };\n\n   const {\n      value: nameInput,\n      hasError: nameHasError,\n      inputBlurHandler: nameBlurHandler,\n      inputChangeHandler: nameChangeHandler,\n      resetInput: nameReset,\n   } = useInput(isEmpty);\n   const {\n      value: streetInput,\n      hasError: streetHasError,\n      inputBlurHandler: streetBlurHandler,\n      inputChangeHandler: streetChangeHandler,\n      resetInput: streetReset,\n   } = useInput(isEmpty);\n   const {\n      value: cityInput,\n      hasError: cityHasError,\n      inputBlurHandler: cityBlurHandler,\n      inputChangeHandler: cityChangeHandler,\n      resetInput: cityReset,\n   } = useInput(isEmpty);\n   const {\n      value: postCodeInput,\n      hasError: postCodeHasError,\n      inputBlurHandler: postCodeBlurHandler,\n      inputChangeHandler: postCodeChangeHandler,\n      resetInput: postCodeReset,\n   } = useInput(pinIsValid);\n\n   const confirmOrderHandler = (event) => {\n      event.preventDefault();\n      const userData = {\n         name: nameInput,\n         streetName: streetInput,\n         zipcode: postCodeInput,\n         cityName: cityInput,\n      };\n      props.onSubmit(userData);\n      nameReset();\n      cityReset();\n      streetReset();\n      postCodeReset();\n   };\n\n   const nameClasses = `${classes.control} ${\n      nameHasError ? classes.invalid : ''\n   }`;\n   const streetClasses = `${classes.control} ${\n      streetHasError ? classes.invalid : ''\n   }`;\n   const postalCodeClasses = `${classes.control} ${\n      postCodeHasError ? classes.invalid : ''\n   }`;\n   const cityClasses = `${classes.control} ${\n      cityHasError ? classes.invalid : ''\n   }`;\n\n   return (\n      <form className={classes.form} onSubmit={confirmOrderHandler}>\n         <div className={nameClasses}>\n            <label htmlFor='name'>Your Name</label>\n            <input\n               type='text'\n               id='name'\n               value={nameInput}\n               onChange={nameChangeHandler}\n               onBlur={nameBlurHandler}\n            />\n            {nameHasError && (\n               <p className={classes['error-text']}>name must have valid</p>\n            )}\n         </div>\n         <div className={streetClasses}>\n            <label htmlFor='street'>Street</label>\n            <input\n               type='text'\n               id='street'\n               value={streetInput}\n               onChange={streetChangeHandler}\n               onBlur={streetBlurHandler}\n            />\n            {streetHasError && <p>street must be filled!</p>}\n         </div>\n         <div className={postalCodeClasses}>\n            <label htmlFor='postal'>Postal Code</label>\n            <input\n               type='text'\n               id='postal'\n               value={postCodeInput}\n               onChange={postCodeChangeHandler}\n               onBlur={postCodeBlurHandler}\n            />\n            {postCodeHasError && <p>postal code should be valid(6digit)</p>}\n         </div>\n         <div className={cityClasses}>\n            <label htmlFor='city'>City</label>\n            <input\n               type='text'\n               id='city'\n               value={cityInput}\n               onChange={cityChangeHandler}\n               onBlur={cityBlurHandler}\n            />\n            {cityHasError && (\n               <p className={classes['error-text']}>city must be valid</p>\n            )}\n         </div>\n         <div className={classes.actions}>\n            <button type='button' onClick={props.onCancel}>\n               Cancel\n            </button>\n            <button className={classes.submit}>Confirm</button>\n         </div>\n      </form>\n   );\n};\n\nexport default Checkout;\n","G:\\React\\Reactjs\\react-food-order-app\\src\\hooks\\use-input.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]